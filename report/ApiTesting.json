{
  "stats": {
    "suites": 13,
    "tests": 21,
    "passes": 21,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-20T16:20:47.814Z",
    "end": "2024-06-20T16:20:57.770Z",
    "duration": 9956,
    "testsRegistered": 21,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0a531cd9-ba2c-4ce9-a2c2-d7d4caafc883",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4e6c31ee-0cd6-48c2-bce0-62462b121d5e",
          "title": "Github Api Test",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
          "file": "\\test\\GithubApi.Authentication.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "59b9225b-2b69-449a-ac4f-f819a1e9a818",
              "title": "Authentication",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
              "file": "\\test\\GithubApi.Authentication.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Via OAuth2 Tokens by Header",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by Header",
                  "timedOut": false,
                  "duration": 528,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/repos/${githubUserName}/${repository}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "fe192cd6-5ee8-4dad-b57e-e95eb613a8b0",
                  "parentUUID": "59b9225b-2b69-449a-ac4f-f819a1e9a818",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Via OAuth2 Tokens by parameter",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by parameter",
                  "timedOut": false,
                  "duration": 137,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(\n  `${urlBase}/repos/${githubUserName}/${repository}`,\n  { access_token: process.env.ACCESS_TOKEN }\n);\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "1add9eb9-fe50-44d1-a2f5-e8b1a1c0a3fd",
                  "parentUUID": "59b9225b-2b69-449a-ac4f-f819a1e9a818",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fe192cd6-5ee8-4dad-b57e-e95eb613a8b0",
                "1add9eb9-fe50-44d1-a2f5-e8b1a1c0a3fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 665,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "eea6b334-32ef-4794-923b-35b5322d28e3",
          "title": "Delete request",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Gist.test.js",
          "file": "\\test\\GithubApi.Gist.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "033e7b03-53ec-453a-bee9-d74c5bd42579",
              "title": "Review creation of gist by post",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Gist.test.js",
              "file": "\\test\\GithubApi.Gist.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review creation of gist by post\"",
                  "fullTitle": "Delete request Review creation of gist by post \"before all\" hook in \"Review creation of gist by post\"",
                  "timedOut": false,
                  "duration": 579,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createGist = await axios.post(`${urlBase}/gists`, gistData, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ngistDataResult = createGist.data;\nurlGist = gistDataResult.html_url;\nidGist = gistDataResult.id;",
                  "err": {},
                  "uuid": "ea6d0b68-cfdc-4ed0-aa9f-43ca344864b2",
                  "parentUUID": "033e7b03-53ec-453a-bee9-d74c5bd42579",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify gist creation",
                  "fullTitle": "Delete request Review creation of gist by post Verify gist creation",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(createGist.status).to.equal(201);\nexpect(createGist.statusText).to.equal('Created');\nexpect(gistDataResult.public).to.equal(true);\nexpect(gistDataResult.description).to.equal(gistData.description);\nexpect(gistDataResult.files['promesaFileTest.js'].content).to.equal(gistData.files['promesaFileTest.js'].content);",
                  "err": {},
                  "uuid": "7d04867d-127a-4303-a919-195d698cc775",
                  "parentUUID": "033e7b03-53ec-453a-bee9-d74c5bd42579",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Search gist",
                  "fullTitle": "Delete request Review creation of gist by post Search gist",
                  "timedOut": false,
                  "duration": 533,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const dataGist = await axios.get(urlGist, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(dataGist.status).to.equal(200);\nassert.exists(dataGist);",
                  "err": {},
                  "uuid": "9932c588-9300-4e4d-bc4a-9559de5b78cc",
                  "parentUUID": "033e7b03-53ec-453a-bee9-d74c5bd42579",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete gist",
                  "fullTitle": "Delete request Review creation of gist by post Delete gist",
                  "timedOut": false,
                  "duration": 503,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const deleteGist = await axios.delete(`${urlBase}/gists/${idGist}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(deleteGist.status).to.equal(204);\nconst dataGist = await axios.get(`${urlBase}/users/rubendma/gists`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst gistResults = dataGist.data;\nconst gistResponse = gistResults.find((gist) => gist.id === idGist);\nexpect(gistResponse).to.equal(undefined);",
                  "err": {},
                  "uuid": "f3b837a4-a5ed-42a2-b23d-c47d64db8f1b",
                  "parentUUID": "033e7b03-53ec-453a-bee9-d74c5bd42579",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d04867d-127a-4303-a919-195d698cc775",
                "9932c588-9300-4e4d-bc4a-9559de5b78cc",
                "f3b837a4-a5ed-42a2-b23d-c47d64db8f1b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1036,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "658bc0af-302d-4104-b3a3-ef49f735e2a6",
          "title": "Post and Patch requests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Issue.test.js",
          "file": "\\test\\GithubApi.Issue.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c1e53130-9f2b-41b3-9ff7-a0c1ebcacedc",
              "title": "Review creation of issue by post",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Issue.test.js",
              "file": "\\test\\GithubApi.Issue.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review creation of issue by post\"",
                  "fullTitle": "Post and Patch requests Review creation of issue by post \"before all\" hook in \"Review creation of issue by post\"",
                  "timedOut": false,
                  "duration": 157,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.get(`${urlBase}/user`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;\nurlIssue = `${urlBase}/repos/${dataUser.login}/${repositoryName}/issues`;",
                  "err": {},
                  "uuid": "aa7c0de4-3177-41f2-a953-ad9aad18bc53",
                  "parentUUID": "c1e53130-9f2b-41b3-9ff7-a0c1ebcacedc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify exist at least one public repository",
                  "fullTitle": "Post and Patch requests Review creation of issue by post Verify exist at least one public repository",
                  "timedOut": false,
                  "duration": 303,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const repositories = await axios.get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst dataRepositories = repositories.data;\nconst repository = dataRepositories.find((repo) => repo.private === false);\nexpect(repository.name).to.not.equal(undefined);",
                  "err": {},
                  "uuid": "1e0fecf0-d470-4d67-a736-fdb0d105bd89",
                  "parentUUID": "c1e53130-9f2b-41b3-9ff7-a0c1ebcacedc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify issue creation",
                  "fullTitle": "Post and Patch requests Review creation of issue by post Verify issue creation",
                  "timedOut": false,
                  "duration": 384,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const timeStamp = Date.now();\nconst issueData = { title: `Issue created from api ${timeStamp}` };\nconst createIssue = await axios.post(urlIssue, issueData, {\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nissueNumber = createIssue.data.number;\nissueTitle = issueData.title;\nexpect(createIssue.status).to.equal(201);\nexpect(createIssue.statusText).to.equal('Created');\nexpect(issueNumber).to.not.equal(undefined);\nexpect(createIssue.data.title).to.equal(issueTitle);\nexpect(createIssue.data.body).to.equal(null);",
                  "err": {},
                  "uuid": "054e8d34-d63b-45fe-aac8-b27e11958b01",
                  "parentUUID": "c1e53130-9f2b-41b3-9ff7-a0c1ebcacedc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify issue update",
                  "fullTitle": "Post and Patch requests Review creation of issue by post Verify issue update",
                  "timedOut": false,
                  "duration": 496,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const dataIssueUpdate = { body: 'Body added to review issue' };\nconst updateIssue = await axios.patch(`${urlIssue}/${issueNumber}`, dataIssueUpdate, {\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(updateIssue.status).to.equal(200);\nexpect(updateIssue.statusText).to.equal('OK');\nexpect(updateIssue.data.number).to.equal(issueNumber);\nexpect(updateIssue.data.title).to.equal(issueTitle);\nexpect(updateIssue.data.body).to.equal(dataIssueUpdate.body);",
                  "err": {},
                  "uuid": "2af29f30-4fd5-49d7-9259-36e08afc75d4",
                  "parentUUID": "c1e53130-9f2b-41b3-9ff7-a0c1ebcacedc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e0fecf0-d470-4d67-a736-fdb0d105bd89",
                "054e8d34-d63b-45fe-aac8-b27e11958b01",
                "2af29f30-4fd5-49d7-9259-36e08afc75d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1183,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "4d3ab8a3-5dc2-4173-9603-af4bb97893ab",
          "title": "Put requests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
          "file": "\\test\\GithubApi.Put.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f832c497-1cad-46da-b1eb-7264e514cd23",
              "title": "Review follow an user",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
              "file": "\\test\\GithubApi.Put.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review follow an user\"",
                  "fullTitle": "Put requests Review follow an user \"before all\" hook in \"Review follow an user\"",
                  "timedOut": false,
                  "duration": 157,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.put(`${urlBase}/user/following/${githubUserName}`, null, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response;",
                  "err": {},
                  "uuid": "008b2c11-e5a4-48f5-aaa5-0e1350d89de0",
                  "parentUUID": "f832c497-1cad-46da-b1eb-7264e514cd23",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify status ok",
                  "fullTitle": "Put requests Review follow an user Verify status ok",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.status).to.equal(204);\nexpect(dataUser.statusText).to.equal('No Content');",
                  "err": {},
                  "uuid": "531252c9-d922-4535-83f4-e0cb5abb02b2",
                  "parentUUID": "f832c497-1cad-46da-b1eb-7264e514cd23",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "531252c9-d922-4535-83f4-e0cb5abb02b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "33d3fa29-67ea-4547-b0e5-f302f24e04bb",
              "title": "Review user follows an other user",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
              "file": "\\test\\GithubApi.Put.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review user follows an other user\"",
                  "fullTitle": "Put requests Review user follows an other user \"before all\" hook in \"Review user follows an other user\"",
                  "timedOut": false,
                  "duration": 153,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.get(`${urlBase}/user/following`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;",
                  "err": {},
                  "uuid": "3ac30308-18bb-48ae-a732-d3d0caeda4cc",
                  "parentUUID": "33d3fa29-67ea-4547-b0e5-f302f24e04bb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify users that follow the account",
                  "fullTitle": "Put requests Review user follows an other user Verify users that follow the account",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userFollowed = dataUser.find((users) => users.login === githubUserName);\nexpect(userFollowed.login).to.equal('aperdomob');",
                  "err": {},
                  "uuid": "6033a2b3-a0c2-4491-aa95-04999bfd68ec",
                  "parentUUID": "33d3fa29-67ea-4547-b0e5-f302f24e04bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6033a2b3-a0c2-4491-aa95-04999bfd68ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "0f2c8354-6084-4c44-b2ee-c82bc05385b6",
          "title": "Github Api Test",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
          "file": "\\test\\GithubApi.Repositories.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c4c6bc11-c5ac-4166-bec5-249876bf2c8a",
              "title": "Get data from git hub",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
              "file": "\\test\\GithubApi.Repositories.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get data from git hub\"",
                  "fullTitle": "Github Api Test Get data from git hub \"before all\" hook in \"Get data from git hub\"",
                  "timedOut": false,
                  "duration": 149,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/users/${githubUserName}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;",
                  "err": {},
                  "uuid": "a16d4af8-a141-4255-9582-9c3f6e2fc26b",
                  "parentUUID": "c4c6bc11-c5ac-4166-bec5-249876bf2c8a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify data of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify data of the user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.name).equal(nameOfUser);\nexpect(dataUser.company).equal(company);\nexpect(dataUser.location).equal(location);",
                  "err": {},
                  "uuid": "8111cd2b-dadc-4ab2-9ac0-3654336e3c45",
                  "parentUUID": "c4c6bc11-c5ac-4166-bec5-249876bf2c8a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify specific repo of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify specific repo of the user",
                  "timedOut": false,
                  "duration": 805,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = response.data;\nconst repository = repositories.find((repo) => repo.name === repoToVerify);\nassert.exists(repository);\nexpect(repository.full_name).to.equal('aperdomob/jasmine-json-report');\nexpect(repository.private).to.equal(false);\nexpect(repository.description).to.equal('A Simple Jasmine JSON Report');",
                  "err": {},
                  "uuid": "3e48b766-ad5d-44bb-b12f-c916b95deb96",
                  "parentUUID": "c4c6bc11-c5ac-4166-bec5-249876bf2c8a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify repo is downloaded in zip format",
                  "fullTitle": "Github Api Test Get data from git hub Verify repo is downloaded in zip format",
                  "timedOut": false,
                  "duration": 1601,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const noExpectedMd5 = '62b254a4ef680d62d6de3489e462ad43';\nconst response = await get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = response.data;\nconst repository = repositories.find((repo) => repo.name === repoToVerify);\nconst responseFile = await get(`${repository.svn_url}/archive/refs/heads/${repository.default_branch}.zip`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nassert.exists(responseFile);\nexpect(md5(responseFile.data)).to.equal(noExpectedMd5);",
                  "err": {},
                  "uuid": "36935381-143e-450f-a1e6-fe828d73d084",
                  "parentUUID": "c4c6bc11-c5ac-4166-bec5-249876bf2c8a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8111cd2b-dadc-4ab2-9ac0-3654336e3c45",
                "3e48b766-ad5d-44bb-b12f-c916b95deb96",
                "36935381-143e-450f-a1e6-fe828d73d084"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2406,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "742d4f53-5872-4ae3-b5ed-8b826354a484",
              "title": "Get README file to verify",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
              "file": "\\test\\GithubApi.Repositories.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get README file to verify\"",
                  "fullTitle": "Github Api Test Get README file to verify \"before all\" hook in \"Get README file to verify\"",
                  "timedOut": false,
                  "duration": 759,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/users/${githubUserName}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst responseRepos = await get(response.data.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = responseRepos.data;\nconst repositoryData = repositories.find((repo) => repo.name === repoToVerify);\nconst responseFile = await get(`${repositoryData.url}/contents`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nresponseFileData = responseFile.data;",
                  "err": {},
                  "uuid": "223c26fc-d487-431d-a817-e797f67afb6f",
                  "parentUUID": "742d4f53-5872-4ae3-b5ed-8b826354a484",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify README.md data",
                  "fullTitle": "Github Api Test Get README file to verify Verify README.md data",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const readmeData = responseFileData.find((files) => files.name === readmeName);\nexpect(readmeData.name).to.equal(readmeName);\nexpect(readmeData.path).to.equal(readmePath);\nexpect(readmeData.sha).to.equal(readmeSha);",
                  "err": {},
                  "uuid": "54387709-fdb6-4d5d-8737-adaca2d2729e",
                  "parentUUID": "742d4f53-5872-4ae3-b5ed-8b826354a484",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Download README.md file",
                  "fullTitle": "Github Api Test Get README file to verify Download README.md file",
                  "timedOut": false,
                  "duration": 366,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const readmeMD5 = '497eb689648cbbda472b16baaee45731';\nconst repositoryData = responseFileData.find((repo) => repo.name === readmeName);\nconst responseReadme = await get(repositoryData.download_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nassert.exists(responseReadme);\nexpect(md5(responseReadme.data)).to.equal(readmeMD5);",
                  "err": {},
                  "uuid": "f888ca08-ef65-4309-bf33-09706e15617c",
                  "parentUUID": "742d4f53-5872-4ae3-b5ed-8b826354a484",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "54387709-fdb6-4d5d-8737-adaca2d2729e",
                "f888ca08-ef65-4309-bf33-09706e15617c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 367,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "84737891-97cd-41b7-bd02-92fb413e2bfc",
          "title": "First Api Tests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\MyFirstApiConsume.test.js",
          "file": "\\test\\MyFirstApiConsume.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Consume GET Service",
              "fullTitle": "First Api Tests Consume GET Service",
              "timedOut": false,
              "duration": 944,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://httpbin.org/ip');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "eeeedc00-c448-4cea-a4eb-90d578f3dae6",
              "parentUUID": "84737891-97cd-41b7-bd02-92fb413e2bfc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume GET Service with query parameters",
              "fullTitle": "First Api Tests Consume GET Service with query parameters",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'John',\n  age: '31',\n  city: 'New York'\n};\nconst response = await axios.get('https://httpbin.org/get', { query });\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.config.query).to.eql(query);",
              "err": {},
              "uuid": "c7966ecd-da06-42a8-9cd1-308c65083147",
              "parentUUID": "84737891-97cd-41b7-bd02-92fb413e2bfc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PATCH Service",
              "fullTitle": "First Api Tests Consume PATCH Service",
              "timedOut": false,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.patch('https://httpbin.org/patch');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "104b51bb-62a9-482a-868b-178275a77b8f",
              "parentUUID": "84737891-97cd-41b7-bd02-92fb413e2bfc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PUT Service",
              "fullTitle": "First Api Tests Consume PUT Service",
              "timedOut": false,
              "duration": 662,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put('https://httpbin.org/put');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "43c2f0f2-7d3f-4faa-860b-7d8a75e0f6eb",
              "parentUUID": "84737891-97cd-41b7-bd02-92fb413e2bfc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume DELETE Service",
              "fullTitle": "First Api Tests Consume DELETE Service",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete('https://httpbin.org/delete');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "7c7f742b-4953-4a23-b972-3676a9ceaddb",
              "parentUUID": "84737891-97cd-41b7-bd02-92fb413e2bfc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume HEAD Service",
              "fullTitle": "First Api Tests Consume HEAD Service",
              "timedOut": false,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.head('https://httpbin.org/');\nexpect(response.status).to.equal(StatusCodes.OK);",
              "err": {},
              "uuid": "83a63a29-5b66-4d07-863a-58052b52732e",
              "parentUUID": "84737891-97cd-41b7-bd02-92fb413e2bfc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eeeedc00-c448-4cea-a4eb-90d578f3dae6",
            "c7966ecd-da06-42a8-9cd1-308c65083147",
            "104b51bb-62a9-482a-868b-178275a77b8f",
            "43c2f0f2-7d3f-4faa-860b-7d8a75e0f6eb",
            "7c7f742b-4953-4a23-b972-3676a9ceaddb",
            "83a63a29-5b66-4d07-863a-58052b52732e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2321,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "ApiTesting",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "reportFilename": "ApiTesting"
      },
      "version": "6.2.0"
    }
  }
}