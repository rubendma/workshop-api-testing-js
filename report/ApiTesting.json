{
  "stats": {
    "suites": 16,
    "tests": 23,
    "passes": 23,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-21T13:31:19.759Z",
    "end": "2024-06-21T13:31:33.453Z",
    "duration": 13694,
    "testsRegistered": 23,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "31557b74-1a85-473f-a3ef-de4bc6a36608",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b114bc1f-9aa0-4e88-883e-2aa51f7db729",
          "title": "Github Api Test",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
          "file": "\\test\\GithubApi.Authentication.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "de230be1-1607-4bbf-9456-0298f02ef245",
              "title": "Authentication",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
              "file": "\\test\\GithubApi.Authentication.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Via OAuth2 Tokens by Header",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by Header",
                  "timedOut": false,
                  "duration": 476,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/repos/${githubUserName}/${repository}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "23894a50-269f-4a0a-ae5e-67c48b9ba40a",
                  "parentUUID": "de230be1-1607-4bbf-9456-0298f02ef245",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Via OAuth2 Tokens by parameter",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by parameter",
                  "timedOut": false,
                  "duration": 123,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(\n  `${urlBase}/repos/${githubUserName}/${repository}`,\n  { access_token: process.env.ACCESS_TOKEN }\n);\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "7ad00692-de3d-45d2-aa78-d8408419176e",
                  "parentUUID": "de230be1-1607-4bbf-9456-0298f02ef245",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "23894a50-269f-4a0a-ae5e-67c48b9ba40a",
                "7ad00692-de3d-45d2-aa78-d8408419176e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 599,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "6166e3a4-bd5c-4744-9c20-ecb87aeb19da",
          "title": "Delete request",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Gist.test.js",
          "file": "\\test\\GithubApi.Gist.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ea093dc9-dad9-4104-9681-0c1befd57245",
              "title": "Review creation of gist by post",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Gist.test.js",
              "file": "\\test\\GithubApi.Gist.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review creation of gist by post\"",
                  "fullTitle": "Delete request Review creation of gist by post \"before all\" hook in \"Review creation of gist by post\"",
                  "timedOut": false,
                  "duration": 642,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createGist = await axios.post(`${urlBase}/gists`, gistData, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ngistDataResult = createGist.data;\nurlGist = gistDataResult.html_url;\nidGist = gistDataResult.id;",
                  "err": {},
                  "uuid": "94f67082-d896-4115-9da7-fdba15383363",
                  "parentUUID": "ea093dc9-dad9-4104-9681-0c1befd57245",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify gist creation",
                  "fullTitle": "Delete request Review creation of gist by post Verify gist creation",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(createGist.status).to.equal(201);\nexpect(createGist.statusText).to.equal('Created');\nexpect(gistDataResult.public).to.equal(true);\nexpect(gistDataResult.description).to.equal(gistData.description);\nexpect(gistDataResult.files['promesaFileTest.js'].content).to.equal(gistData.files['promesaFileTest.js'].content);",
                  "err": {},
                  "uuid": "972e376a-4c97-4d30-9bde-d3fba5d7fbab",
                  "parentUUID": "ea093dc9-dad9-4104-9681-0c1befd57245",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Search gist",
                  "fullTitle": "Delete request Review creation of gist by post Search gist",
                  "timedOut": false,
                  "duration": 507,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const dataGist = await axios.get(urlGist, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(dataGist.status).to.equal(200);\nassert.exists(dataGist);",
                  "err": {},
                  "uuid": "8f2631bf-f0a2-4180-afe2-e9287973967f",
                  "parentUUID": "ea093dc9-dad9-4104-9681-0c1befd57245",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete gist",
                  "fullTitle": "Delete request Review creation of gist by post Delete gist",
                  "timedOut": false,
                  "duration": 695,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const deleteGist = await axios.delete(`${urlBase}/gists/${idGist}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(deleteGist.status).to.equal(204);\nconst dataGist = await axios.get(`${urlBase}/users/rubendma/gists`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst gistResults = dataGist.data;\nconst gistResponse = gistResults.find((gist) => gist.id === idGist);\nexpect(gistResponse).to.equal(undefined);",
                  "err": {},
                  "uuid": "697f4a58-7f82-46fc-b282-46013a3e6c48",
                  "parentUUID": "ea093dc9-dad9-4104-9681-0c1befd57245",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "972e376a-4c97-4d30-9bde-d3fba5d7fbab",
                "8f2631bf-f0a2-4180-afe2-e9287973967f",
                "697f4a58-7f82-46fc-b282-46013a3e6c48"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1202,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "6af8e6fa-5171-4c2f-aa46-22c1cb0287ce",
          "title": "Post and Patch requests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Issue.test.js",
          "file": "\\test\\GithubApi.Issue.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5825974a-5111-4a16-b6aa-7db4eb6b8953",
              "title": "Review creation of issue by post",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Issue.test.js",
              "file": "\\test\\GithubApi.Issue.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review creation of issue by post\"",
                  "fullTitle": "Post and Patch requests Review creation of issue by post \"before all\" hook in \"Review creation of issue by post\"",
                  "timedOut": false,
                  "duration": 167,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.get(`${urlBase}/user`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;\nurlIssue = `${urlBase}/repos/${dataUser.login}/${repositoryName}/issues`;",
                  "err": {},
                  "uuid": "57c04bbf-1e67-43a7-9a5c-055df538868d",
                  "parentUUID": "5825974a-5111-4a16-b6aa-7db4eb6b8953",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify exist at least one public repository",
                  "fullTitle": "Post and Patch requests Review creation of issue by post Verify exist at least one public repository",
                  "timedOut": false,
                  "duration": 394,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const repositories = await axios.get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst dataRepositories = repositories.data;\nconst repository = dataRepositories.find((repo) => repo.private === false);\nexpect(repository.name).to.not.equal(undefined);",
                  "err": {},
                  "uuid": "d1a131da-5f3e-40c8-b804-ea0dc0cde144",
                  "parentUUID": "5825974a-5111-4a16-b6aa-7db4eb6b8953",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify issue creation",
                  "fullTitle": "Post and Patch requests Review creation of issue by post Verify issue creation",
                  "timedOut": false,
                  "duration": 320,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const timeStamp = Date.now();\nconst issueData = { title: `Issue created from api ${timeStamp}` };\nconst createIssue = await axios.post(urlIssue, issueData, {\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nissueNumber = createIssue.data.number;\nissueTitle = issueData.title;\nexpect(createIssue.status).to.equal(201);\nexpect(createIssue.statusText).to.equal('Created');\nexpect(issueNumber).to.not.equal(undefined);\nexpect(createIssue.data.title).to.equal(issueTitle);\nexpect(createIssue.data.body).to.equal(null);",
                  "err": {},
                  "uuid": "83d5275d-09a4-4150-985f-a923fd7ad3b1",
                  "parentUUID": "5825974a-5111-4a16-b6aa-7db4eb6b8953",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify issue update",
                  "fullTitle": "Post and Patch requests Review creation of issue by post Verify issue update",
                  "timedOut": false,
                  "duration": 582,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const dataIssueUpdate = { body: 'Body added to review issue' };\nconst updateIssue = await axios.patch(`${urlIssue}/${issueNumber}`, dataIssueUpdate, {\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(updateIssue.status).to.equal(200);\nexpect(updateIssue.statusText).to.equal('OK');\nexpect(updateIssue.data.number).to.equal(issueNumber);\nexpect(updateIssue.data.title).to.equal(issueTitle);\nexpect(updateIssue.data.body).to.equal(dataIssueUpdate.body);",
                  "err": {},
                  "uuid": "2c91bbc1-df7c-45bf-9edc-8390f87e85d7",
                  "parentUUID": "5825974a-5111-4a16-b6aa-7db4eb6b8953",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d1a131da-5f3e-40c8-b804-ea0dc0cde144",
                "83d5275d-09a4-4150-985f-a923fd7ad3b1",
                "2c91bbc1-df7c-45bf-9edc-8390f87e85d7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1296,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "f642021f-2bdc-4eb3-97f4-820aba833e91",
          "title": "Put requests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
          "file": "\\test\\GithubApi.Put.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ae606962-bf29-4a45-8989-672a92cbf154",
              "title": "Review follow an user",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
              "file": "\\test\\GithubApi.Put.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review follow an user\"",
                  "fullTitle": "Put requests Review follow an user \"before all\" hook in \"Review follow an user\"",
                  "timedOut": false,
                  "duration": 168,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.put(`${urlBase}/user/following/${githubUserName}`, null, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response;",
                  "err": {},
                  "uuid": "49d6a0d7-1fbf-49aa-a8f2-c20421b77a39",
                  "parentUUID": "ae606962-bf29-4a45-8989-672a92cbf154",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify status ok",
                  "fullTitle": "Put requests Review follow an user Verify status ok",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.status).to.equal(204);\nexpect(dataUser.statusText).to.equal('No Content');",
                  "err": {},
                  "uuid": "998dd5b5-23d9-4ee2-981e-71c27dcd8f0c",
                  "parentUUID": "ae606962-bf29-4a45-8989-672a92cbf154",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "998dd5b5-23d9-4ee2-981e-71c27dcd8f0c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "449c256c-aa4e-479f-b290-ce080b682921",
              "title": "Review user follows an other user",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
              "file": "\\test\\GithubApi.Put.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review user follows an other user\"",
                  "fullTitle": "Put requests Review user follows an other user \"before all\" hook in \"Review user follows an other user\"",
                  "timedOut": false,
                  "duration": 149,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.get(`${urlBase}/user/following`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;",
                  "err": {},
                  "uuid": "7f4b0d78-fda0-4111-92a0-fc098b4dbeba",
                  "parentUUID": "449c256c-aa4e-479f-b290-ce080b682921",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify users that follow the account",
                  "fullTitle": "Put requests Review user follows an other user Verify users that follow the account",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userFollowed = dataUser.find((users) => users.login === githubUserName);\nexpect(userFollowed.login).to.equal('aperdomob');",
                  "err": {},
                  "uuid": "5b947244-fc00-417e-b948-5fff95914f45",
                  "parentUUID": "449c256c-aa4e-479f-b290-ce080b682921",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5b947244-fc00-417e-b948-5fff95914f45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "43e5198e-8900-4fe2-a9fa-2f55a54f74ed",
          "title": "HEAD requests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Redirect.test.js",
          "file": "\\test\\GithubApi.Redirect.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ff07f46e-252c-4334-8dbf-a3a35e246156",
              "title": "Review HEAD request",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Redirect.test.js",
              "file": "\\test\\GithubApi.Redirect.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review HEAD request\"",
                  "fullTitle": "HEAD requests Review HEAD request \"before all\" hook in \"Review HEAD request\"",
                  "timedOut": false,
                  "duration": 922,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.head(urlBase, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response;",
                  "err": {},
                  "uuid": "4d4246d1-8c16-40dd-864e-dfb62d83d02b",
                  "parentUUID": "ff07f46e-252c-4334-8dbf-a3a35e246156",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify redirect url and status",
                  "fullTitle": "HEAD requests Review HEAD request Verify redirect url and status",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.status).to.equal(200);\nexpect(dataUser.request.res.responseUrl).to.equal(urlRedirect);",
                  "err": {},
                  "uuid": "206566a1-62eb-4028-b188-c8ae31e5edbf",
                  "parentUUID": "ff07f46e-252c-4334-8dbf-a3a35e246156",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "206566a1-62eb-4028-b188-c8ae31e5edbf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "6946d969-32ce-4359-966f-a0755894dc98",
              "title": "Review HEAD redirect request",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Redirect.test.js",
              "file": "\\test\\GithubApi.Redirect.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review HEAD redirect request\"",
                  "fullTitle": "HEAD requests Review HEAD redirect request \"before all\" hook in \"Review HEAD redirect request\"",
                  "timedOut": false,
                  "duration": 1038,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.get(urlBase, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response;",
                  "err": {},
                  "uuid": "f24ef89a-63f9-4086-93d1-41473b270a47",
                  "parentUUID": "6946d969-32ce-4359-966f-a0755894dc98",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify redirection",
                  "fullTitle": "HEAD requests Review HEAD redirect request Verify redirection",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.status).to.equal(200);\nexpect(dataUser.request.res.responseUrl).to.equal(urlRedirect);",
                  "err": {},
                  "uuid": "a6fde239-4ca1-47bc-8956-d9bf3c3a4314",
                  "parentUUID": "6946d969-32ce-4359-966f-a0755894dc98",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6fde239-4ca1-47bc-8956-d9bf3c3a4314"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "4243aa08-e67f-4ddd-bf24-5023f0732402",
          "title": "Github Api Test",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
          "file": "\\test\\GithubApi.Repositories.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5a42bbdd-9e89-4219-b160-98423d50b4db",
              "title": "Get data from git hub",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
              "file": "\\test\\GithubApi.Repositories.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get data from git hub\"",
                  "fullTitle": "Github Api Test Get data from git hub \"before all\" hook in \"Get data from git hub\"",
                  "timedOut": false,
                  "duration": 126,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/users/${githubUserName}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;",
                  "err": {},
                  "uuid": "5241fb8b-841c-4bb4-b9e8-1fa3e389dd4b",
                  "parentUUID": "5a42bbdd-9e89-4219-b160-98423d50b4db",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify data of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify data of the user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.name).equal(nameOfUser);\nexpect(dataUser.company).equal(company);\nexpect(dataUser.location).equal(location);",
                  "err": {},
                  "uuid": "dc3716aa-6d59-4eec-8481-5d5263fc3b04",
                  "parentUUID": "5a42bbdd-9e89-4219-b160-98423d50b4db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify specific repo of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify specific repo of the user",
                  "timedOut": false,
                  "duration": 1287,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = response.data;\nconst repository = repositories.find((repo) => repo.name === repoToVerify);\nassert.exists(repository);\nexpect(repository.full_name).to.equal('aperdomob/jasmine-json-report');\nexpect(repository.private).to.equal(false);\nexpect(repository.description).to.equal('A Simple Jasmine JSON Report');",
                  "err": {},
                  "uuid": "965474a7-7a88-4a15-9c44-a7a76133a512",
                  "parentUUID": "5a42bbdd-9e89-4219-b160-98423d50b4db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify repo is downloaded in zip format",
                  "fullTitle": "Github Api Test Get data from git hub Verify repo is downloaded in zip format",
                  "timedOut": false,
                  "duration": 1272,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const noExpectedMd5 = '62b254a4ef680d62d6de3489e462ad43';\nconst response = await get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = response.data;\nconst repository = repositories.find((repo) => repo.name === repoToVerify);\nconst responseFile = await get(`${repository.svn_url}/archive/refs/heads/${repository.default_branch}.zip`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nassert.exists(responseFile);\nexpect(md5(responseFile.data)).to.equal(noExpectedMd5);",
                  "err": {},
                  "uuid": "6b15a7cc-a1ba-42d0-8dff-7ccc508f90bc",
                  "parentUUID": "5a42bbdd-9e89-4219-b160-98423d50b4db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc3716aa-6d59-4eec-8481-5d5263fc3b04",
                "965474a7-7a88-4a15-9c44-a7a76133a512",
                "6b15a7cc-a1ba-42d0-8dff-7ccc508f90bc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2559,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "f6e733b8-2d2f-42f0-a2d3-c4aa2a0fe623",
              "title": "Get README file to verify",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
              "file": "\\test\\GithubApi.Repositories.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get README file to verify\"",
                  "fullTitle": "Github Api Test Get README file to verify \"before all\" hook in \"Get README file to verify\"",
                  "timedOut": false,
                  "duration": 849,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/users/${githubUserName}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst responseRepos = await get(response.data.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = responseRepos.data;\nconst repositoryData = repositories.find((repo) => repo.name === repoToVerify);\nconst responseFile = await get(`${repositoryData.url}/contents`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nresponseFileData = responseFile.data;",
                  "err": {},
                  "uuid": "c452b1ef-56b8-4499-8cdd-a2296592f81a",
                  "parentUUID": "f6e733b8-2d2f-42f0-a2d3-c4aa2a0fe623",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify README.md data",
                  "fullTitle": "Github Api Test Get README file to verify Verify README.md data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const readmeData = responseFileData.find((files) => files.name === readmeName);\nexpect(readmeData.name).to.equal(readmeName);\nexpect(readmeData.path).to.equal(readmePath);\nexpect(readmeData.sha).to.equal(readmeSha);",
                  "err": {},
                  "uuid": "92ddd0d3-cae6-4dbc-b697-6a4a7caad136",
                  "parentUUID": "f6e733b8-2d2f-42f0-a2d3-c4aa2a0fe623",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Download README.md file",
                  "fullTitle": "Github Api Test Get README file to verify Download README.md file",
                  "timedOut": false,
                  "duration": 601,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const readmeMD5 = '497eb689648cbbda472b16baaee45731';\nconst repositoryData = responseFileData.find((repo) => repo.name === readmeName);\nconst responseReadme = await get(repositoryData.download_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nassert.exists(responseReadme);\nexpect(md5(responseReadme.data)).to.equal(readmeMD5);",
                  "err": {},
                  "uuid": "b7997b9d-a8e5-4a81-a041-ae48e05c2277",
                  "parentUUID": "f6e733b8-2d2f-42f0-a2d3-c4aa2a0fe623",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "92ddd0d3-cae6-4dbc-b697-6a4a7caad136",
                "b7997b9d-a8e5-4a81-a041-ae48e05c2277"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 601,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "fc4e7895-71aa-4406-8ba9-eec7ef160124",
          "title": "First Api Tests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\MyFirstApiConsume.test.js",
          "file": "\\test\\MyFirstApiConsume.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Consume GET Service",
              "fullTitle": "First Api Tests Consume GET Service",
              "timedOut": false,
              "duration": 563,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://httpbin.org/ip');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "c351762a-d0a5-4fe5-968b-5b577c78c6d3",
              "parentUUID": "fc4e7895-71aa-4406-8ba9-eec7ef160124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume GET Service with query parameters",
              "fullTitle": "First Api Tests Consume GET Service with query parameters",
              "timedOut": false,
              "duration": 1396,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'John',\n  age: '31',\n  city: 'New York'\n};\nconst response = await axios.get('https://httpbin.org/get', { query });\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.config.query).to.eql(query);",
              "err": {},
              "uuid": "d391f80b-a17b-4756-b57c-2747860b037e",
              "parentUUID": "fc4e7895-71aa-4406-8ba9-eec7ef160124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PATCH Service",
              "fullTitle": "First Api Tests Consume PATCH Service",
              "timedOut": false,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.patch('https://httpbin.org/patch');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "e3dd0013-db4a-40fa-93f4-cc2d186a4688",
              "parentUUID": "fc4e7895-71aa-4406-8ba9-eec7ef160124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PUT Service",
              "fullTitle": "First Api Tests Consume PUT Service",
              "timedOut": false,
              "duration": 901,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put('https://httpbin.org/put');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "4d460c94-2aaf-4277-8469-05d73865098d",
              "parentUUID": "fc4e7895-71aa-4406-8ba9-eec7ef160124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume DELETE Service",
              "fullTitle": "First Api Tests Consume DELETE Service",
              "timedOut": false,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete('https://httpbin.org/delete');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "1520dfa6-456f-4a02-b162-4db1332a808b",
              "parentUUID": "fc4e7895-71aa-4406-8ba9-eec7ef160124",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume HEAD Service",
              "fullTitle": "First Api Tests Consume HEAD Service",
              "timedOut": false,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.head('https://httpbin.org/');\nexpect(response.status).to.equal(StatusCodes.OK);",
              "err": {},
              "uuid": "62293db8-443b-44b8-9170-846f43e6841f",
              "parentUUID": "fc4e7895-71aa-4406-8ba9-eec7ef160124",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c351762a-d0a5-4fe5-968b-5b577c78c6d3",
            "d391f80b-a17b-4756-b57c-2747860b037e",
            "e3dd0013-db4a-40fa-93f4-cc2d186a4688",
            "4d460c94-2aaf-4277-8469-05d73865098d",
            "1520dfa6-456f-4a02-b162-4db1332a808b",
            "62293db8-443b-44b8-9170-846f43e6841f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3330,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "ApiTesting",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "reportFilename": "ApiTesting"
      },
      "version": "6.2.0"
    }
  }
}