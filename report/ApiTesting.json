{
  "stats": {
    "suites": 17,
    "tests": 26,
    "passes": 26,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-21T17:30:51.367Z",
    "end": "2024-06-21T17:31:04.160Z",
    "duration": 12793,
    "testsRegistered": 26,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "85b3c621-32fb-4cc3-bd85-6215d6af9aa6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ed75e34a-3891-49ec-8d31-4b444bc12cf4",
          "title": "Github Api Test",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
          "file": "\\test\\GithubApi.Authentication.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ae4a320a-7959-4356-8a54-0b614a971c20",
              "title": "Authentication",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
              "file": "\\test\\GithubApi.Authentication.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Via OAuth2 Tokens by Header",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by Header",
                  "timedOut": false,
                  "duration": 574,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/repos/${githubUserName}/${repository}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "0f0b7706-34a7-478d-8855-e4dd116ccd45",
                  "parentUUID": "ae4a320a-7959-4356-8a54-0b614a971c20",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Via OAuth2 Tokens by parameter",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by parameter",
                  "timedOut": false,
                  "duration": 142,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(\n  `${urlBase}/repos/${githubUserName}/${repository}`,\n  { access_token: process.env.ACCESS_TOKEN }\n);\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "79a98971-3736-41c9-b97f-c19fb8970c42",
                  "parentUUID": "ae4a320a-7959-4356-8a54-0b614a971c20",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0f0b7706-34a7-478d-8855-e4dd116ccd45",
                "79a98971-3736-41c9-b97f-c19fb8970c42"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 716,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "e3511254-4988-491e-b22f-f6212ad11f6b",
          "title": "Delete request",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Gist.test.js",
          "file": "\\test\\GithubApi.Gist.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4b75fdd6-dddc-4817-abe6-fa3afe1d2c3a",
              "title": "Review creation of gist by post",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Gist.test.js",
              "file": "\\test\\GithubApi.Gist.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review creation of gist by post\"",
                  "fullTitle": "Delete request Review creation of gist by post \"before all\" hook in \"Review creation of gist by post\"",
                  "timedOut": false,
                  "duration": 681,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createGist = await axios.post(`${urlBase}/gists`, gistData, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ngistDataResult = createGist.data;\nurlGist = gistDataResult.html_url;\nidGist = gistDataResult.id;",
                  "err": {},
                  "uuid": "9e516141-f7b0-4931-a95b-ecae7095487f",
                  "parentUUID": "4b75fdd6-dddc-4817-abe6-fa3afe1d2c3a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify gist creation",
                  "fullTitle": "Delete request Review creation of gist by post Verify gist creation",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(createGist.status).to.equal(201);\nexpect(createGist.statusText).to.equal('Created');\nexpect(gistDataResult.public).to.equal(true);\nexpect(gistDataResult.description).to.equal(gistData.description);\nexpect(gistDataResult.files['promesaFileTest.js'].content).to.equal(gistData.files['promesaFileTest.js'].content);",
                  "err": {},
                  "uuid": "701a72da-d489-40ff-b4ac-eeb27f8c22b5",
                  "parentUUID": "4b75fdd6-dddc-4817-abe6-fa3afe1d2c3a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Search gist",
                  "fullTitle": "Delete request Review creation of gist by post Search gist",
                  "timedOut": false,
                  "duration": 670,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const dataGist = await axios.get(urlGist, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(dataGist.status).to.equal(200);\nassert.exists(dataGist);",
                  "err": {},
                  "uuid": "02c2842e-847a-4e8f-8eee-f863ec0bd4de",
                  "parentUUID": "4b75fdd6-dddc-4817-abe6-fa3afe1d2c3a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Delete gist",
                  "fullTitle": "Delete request Review creation of gist by post Delete gist",
                  "timedOut": false,
                  "duration": 769,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const deleteGist = await axios.delete(`${urlBase}/gists/${idGist}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(deleteGist.status).to.equal(204);\nconst dataGist = await axios.get(`${urlBase}/users/rubendma/gists`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst gistResults = dataGist.data;\nconst gistResponse = gistResults.find((gist) => gist.id === idGist);\nexpect(gistResponse).to.equal(undefined);",
                  "err": {},
                  "uuid": "8706bf4a-9204-4902-ba36-c5ae0b5cb6c1",
                  "parentUUID": "4b75fdd6-dddc-4817-abe6-fa3afe1d2c3a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "701a72da-d489-40ff-b4ac-eeb27f8c22b5",
                "02c2842e-847a-4e8f-8eee-f863ec0bd4de",
                "8706bf4a-9204-4902-ba36-c5ae0b5cb6c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1439,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "9646ef8d-ff2e-4f41-a8d5-f523d659cc1d",
          "title": "Post and Patch requests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Issue.test.js",
          "file": "\\test\\GithubApi.Issue.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "32d0a7c6-d4f2-468b-a76b-15c09b17bc68",
              "title": "Review creation of issue by post",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Issue.test.js",
              "file": "\\test\\GithubApi.Issue.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review creation of issue by post\"",
                  "fullTitle": "Post and Patch requests Review creation of issue by post \"before all\" hook in \"Review creation of issue by post\"",
                  "timedOut": false,
                  "duration": 153,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.get(`${urlBase}/user`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;\nurlIssue = `${urlBase}/repos/${dataUser.login}/${repositoryName}/issues`;",
                  "err": {},
                  "uuid": "4a7ec809-6212-452e-a812-4472ef965746",
                  "parentUUID": "32d0a7c6-d4f2-468b-a76b-15c09b17bc68",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify exist at least one public repository",
                  "fullTitle": "Post and Patch requests Review creation of issue by post Verify exist at least one public repository",
                  "timedOut": false,
                  "duration": 437,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const repositories = await axios.get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst dataRepositories = repositories.data;\nconst repository = dataRepositories.find((repo) => repo.private === false);\nexpect(repository.name).to.not.equal(undefined);",
                  "err": {},
                  "uuid": "3bbdb4fa-2eec-4dc3-9913-42b325317501",
                  "parentUUID": "32d0a7c6-d4f2-468b-a76b-15c09b17bc68",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify issue creation",
                  "fullTitle": "Post and Patch requests Review creation of issue by post Verify issue creation",
                  "timedOut": false,
                  "duration": 332,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const timeStamp = Date.now();\nconst issueData = { title: `Issue created from api ${timeStamp}` };\nconst createIssue = await axios.post(urlIssue, issueData, {\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nissueNumber = createIssue.data.number;\nissueTitle = issueData.title;\nexpect(createIssue.status).to.equal(201);\nexpect(createIssue.statusText).to.equal('Created');\nexpect(issueNumber).to.not.equal(undefined);\nexpect(createIssue.data.title).to.equal(issueTitle);\nexpect(createIssue.data.body).to.equal(null);",
                  "err": {},
                  "uuid": "f369f406-48a8-4098-81db-f28ca1e27a27",
                  "parentUUID": "32d0a7c6-d4f2-468b-a76b-15c09b17bc68",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify issue update",
                  "fullTitle": "Post and Patch requests Review creation of issue by post Verify issue update",
                  "timedOut": false,
                  "duration": 451,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const dataIssueUpdate = { body: 'Body added to review issue' };\nconst updateIssue = await axios.patch(`${urlIssue}/${issueNumber}`, dataIssueUpdate, {\n  headers: {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(updateIssue.status).to.equal(200);\nexpect(updateIssue.statusText).to.equal('OK');\nexpect(updateIssue.data.number).to.equal(issueNumber);\nexpect(updateIssue.data.title).to.equal(issueTitle);\nexpect(updateIssue.data.body).to.equal(dataIssueUpdate.body);",
                  "err": {},
                  "uuid": "2e75228c-db29-4c70-b53d-7e441248a02d",
                  "parentUUID": "32d0a7c6-d4f2-468b-a76b-15c09b17bc68",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3bbdb4fa-2eec-4dc3-9913-42b325317501",
                "f369f406-48a8-4098-81db-f28ca1e27a27",
                "2e75228c-db29-4c70-b53d-7e441248a02d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1220,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "934f3090-4b7e-4bf6-9c39-1fae736eda83",
          "title": "Put requests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
          "file": "\\test\\GithubApi.Put.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1f8ac536-c80d-4e17-ab79-c8838861869b",
              "title": "Review follow an user",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
              "file": "\\test\\GithubApi.Put.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review follow an user\"",
                  "fullTitle": "Put requests Review follow an user \"before all\" hook in \"Review follow an user\"",
                  "timedOut": false,
                  "duration": 154,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.put(`${urlBase}/user/following/${githubUserName}`, null, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response;",
                  "err": {},
                  "uuid": "fa893415-fa81-4e83-8455-4e8c49405326",
                  "parentUUID": "1f8ac536-c80d-4e17-ab79-c8838861869b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify status ok",
                  "fullTitle": "Put requests Review follow an user Verify status ok",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.status).to.equal(204);\nexpect(dataUser.statusText).to.equal('No Content');",
                  "err": {},
                  "uuid": "77cad7f3-0998-4ba8-b2c2-f631abbef858",
                  "parentUUID": "1f8ac536-c80d-4e17-ab79-c8838861869b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "77cad7f3-0998-4ba8-b2c2-f631abbef858"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "c91434c8-7f4a-4e59-8266-c836f3b2d1f7",
              "title": "Review user follows an other user",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
              "file": "\\test\\GithubApi.Put.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review user follows an other user\"",
                  "fullTitle": "Put requests Review user follows an other user \"before all\" hook in \"Review user follows an other user\"",
                  "timedOut": false,
                  "duration": 130,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.get(`${urlBase}/user/following`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;",
                  "err": {},
                  "uuid": "40fe255c-2eee-47bc-a519-1aa5539c096d",
                  "parentUUID": "c91434c8-7f4a-4e59-8266-c836f3b2d1f7",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify users that follow the account",
                  "fullTitle": "Put requests Review user follows an other user Verify users that follow the account",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userFollowed = dataUser.find((users) => users.login === githubUserName);\nexpect(userFollowed.login).to.equal('aperdomob');",
                  "err": {},
                  "uuid": "ad6d89ae-4a1f-4974-bf59-06e80e1731b0",
                  "parentUUID": "c91434c8-7f4a-4e59-8266-c836f3b2d1f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad6d89ae-4a1f-4974-bf59-06e80e1731b0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "8f84ab75-8847-4bca-87d8-44836a072e89",
          "title": "HEAD requests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Redirect.test.js",
          "file": "\\test\\GithubApi.Redirect.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2943b030-7da5-4db9-b244-e5ce75ab992f",
              "title": "Review HEAD request",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Redirect.test.js",
              "file": "\\test\\GithubApi.Redirect.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review HEAD request\"",
                  "fullTitle": "HEAD requests Review HEAD request \"before all\" hook in \"Review HEAD request\"",
                  "timedOut": false,
                  "duration": 995,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.head(urlBase, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response;",
                  "err": {},
                  "uuid": "f402defd-85bf-4517-8731-2690527049fc",
                  "parentUUID": "2943b030-7da5-4db9-b244-e5ce75ab992f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify redirect url and status",
                  "fullTitle": "HEAD requests Review HEAD request Verify redirect url and status",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.status).to.equal(200);\nexpect(dataUser.request.res.responseUrl).to.equal(urlRedirect);",
                  "err": {},
                  "uuid": "c7612c06-9e07-4174-9691-e78ba3e7f056",
                  "parentUUID": "2943b030-7da5-4db9-b244-e5ce75ab992f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c7612c06-9e07-4174-9691-e78ba3e7f056"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "dee7c761-a9bc-4786-8651-b5f7d460c2d8",
              "title": "Review HEAD redirect request",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Redirect.test.js",
              "file": "\\test\\GithubApi.Redirect.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review HEAD redirect request\"",
                  "fullTitle": "HEAD requests Review HEAD redirect request \"before all\" hook in \"Review HEAD redirect request\"",
                  "timedOut": false,
                  "duration": 1020,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.get(urlBase, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response;",
                  "err": {},
                  "uuid": "9f142de0-881e-4d36-af3e-4439127eff9b",
                  "parentUUID": "dee7c761-a9bc-4786-8651-b5f7d460c2d8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify redirection",
                  "fullTitle": "HEAD requests Review HEAD redirect request Verify redirection",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.status).to.equal(200);\nexpect(dataUser.request.res.responseUrl).to.equal(urlRedirect);",
                  "err": {},
                  "uuid": "a2d25df0-5369-425c-8907-2b1834b94687",
                  "parentUUID": "dee7c761-a9bc-4786-8651-b5f7d460c2d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a2d25df0-5369-425c-8907-2b1834b94687"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "5dc4dd69-f184-45cb-8459-9dcc253d5223",
          "title": "Github Api Test",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
          "file": "\\test\\GithubApi.Repositories.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d0af1614-d019-4570-ba78-0cef4b6c7896",
              "title": "Get data from git hub",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
              "file": "\\test\\GithubApi.Repositories.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get data from git hub\"",
                  "fullTitle": "Github Api Test Get data from git hub \"before all\" hook in \"Get data from git hub\"",
                  "timedOut": false,
                  "duration": 140,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/users/${githubUserName}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;",
                  "err": {},
                  "uuid": "7f1a4f99-389a-4322-b818-b300cef3a588",
                  "parentUUID": "d0af1614-d019-4570-ba78-0cef4b6c7896",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify data of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify data of the user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.name).equal(nameOfUser);\nexpect(dataUser.company).equal(company);\nexpect(dataUser.location).equal(location);",
                  "err": {},
                  "uuid": "f397fea8-6fa3-4e75-9cea-3717f988f660",
                  "parentUUID": "d0af1614-d019-4570-ba78-0cef4b6c7896",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify specific repo of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify specific repo of the user",
                  "timedOut": false,
                  "duration": 806,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = response.data;\nconst repository = repositories.find((repo) => repo.name === repoToVerify);\nassert.exists(repository);\nexpect(repository.full_name).to.equal('aperdomob/jasmine-json-report');\nexpect(repository.private).to.equal(false);\nexpect(repository.description).to.equal('A Simple Jasmine JSON Report');",
                  "err": {},
                  "uuid": "74a894dd-0d25-4502-a9fd-8eb710d31242",
                  "parentUUID": "d0af1614-d019-4570-ba78-0cef4b6c7896",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify repo is downloaded in zip format",
                  "fullTitle": "Github Api Test Get data from git hub Verify repo is downloaded in zip format",
                  "timedOut": false,
                  "duration": 1224,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const noExpectedMd5 = '62b254a4ef680d62d6de3489e462ad43';\nconst response = await get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = response.data;\nconst repository = repositories.find((repo) => repo.name === repoToVerify);\nconst responseFile = await get(`${repository.svn_url}/archive/refs/heads/${repository.default_branch}.zip`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nassert.exists(responseFile);\nexpect(md5(responseFile.data)).to.equal(noExpectedMd5);",
                  "err": {},
                  "uuid": "f827012d-d782-47e1-a27b-9a9f8e1eb7b9",
                  "parentUUID": "d0af1614-d019-4570-ba78-0cef4b6c7896",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f397fea8-6fa3-4e75-9cea-3717f988f660",
                "74a894dd-0d25-4502-a9fd-8eb710d31242",
                "f827012d-d782-47e1-a27b-9a9f8e1eb7b9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2030,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "eec7f0e9-e841-4340-85d3-6eb49ca35dfe",
              "title": "Get README file to verify",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
              "file": "\\test\\GithubApi.Repositories.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get README file to verify\"",
                  "fullTitle": "Github Api Test Get README file to verify \"before all\" hook in \"Get README file to verify\"",
                  "timedOut": false,
                  "duration": 795,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/users/${githubUserName}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst responseRepos = await get(response.data.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = responseRepos.data;\nconst repositoryData = repositories.find((repo) => repo.name === repoToVerify);\nconst responseFile = await get(`${repositoryData.url}/contents`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nresponseFileData = responseFile.data;",
                  "err": {},
                  "uuid": "e910a4fa-4b87-45d0-86b8-f219592e1f7a",
                  "parentUUID": "eec7f0e9-e841-4340-85d3-6eb49ca35dfe",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify README.md data",
                  "fullTitle": "Github Api Test Get README file to verify Verify README.md data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const readmeData = responseFileData.find((files) => files.name === readmeName);\nexpect(readmeData.name).to.equal(readmeName);\nexpect(readmeData.path).to.equal(readmePath);\nexpect(readmeData.sha).to.equal(readmeSha);",
                  "err": {},
                  "uuid": "e93b910f-4d1d-48f4-93f1-0fc424ba07cb",
                  "parentUUID": "eec7f0e9-e841-4340-85d3-6eb49ca35dfe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Download README.md file",
                  "fullTitle": "Github Api Test Get README file to verify Download README.md file",
                  "timedOut": false,
                  "duration": 384,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const readmeMD5 = '497eb689648cbbda472b16baaee45731';\nconst repositoryData = responseFileData.find((repo) => repo.name === readmeName);\nconst responseReadme = await get(repositoryData.download_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nassert.exists(responseReadme);\nexpect(md5(responseReadme.data)).to.equal(readmeMD5);",
                  "err": {},
                  "uuid": "a9607101-3607-4bcc-80b6-2801cdecd2c3",
                  "parentUUID": "eec7f0e9-e841-4340-85d3-6eb49ca35dfe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e93b910f-4d1d-48f4-93f1-0fc424ba07cb",
                "a9607101-3607-4bcc-80b6-2801cdecd2c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 384,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "398aca96-0403-43fb-aeb2-238969b1281a",
          "title": "Query parameters request",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Users.test.js",
          "file": "\\test\\GithubApi.Users.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verify defatult users quantity",
              "fullTitle": "Query parameters request Verify defatult users quantity",
              "timedOut": false,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const getUsers = await axios.get(`${urlBase}/users`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(getUsers.status).to.equal(200);\nexpect(getUsers.data.length).to.equal(30);",
              "err": {},
              "uuid": "5ade1e46-3412-481e-a1a9-c8b9c5b96250",
              "parentUUID": "398aca96-0403-43fb-aeb2-238969b1281a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify response with 10 users",
              "fullTitle": "Query parameters request Verify response with 10 users",
              "timedOut": false,
              "duration": 208,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const getUsers = await axios.get(`${urlBase}/users?per_page=10`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(getUsers.data.length).to.equal(10);",
              "err": {},
              "uuid": "b6351019-4e27-4eeb-b76e-6c2bcb26b0b5",
              "parentUUID": "398aca96-0403-43fb-aeb2-238969b1281a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify response with 100 users",
              "fullTitle": "Query parameters request Verify response with 100 users",
              "timedOut": false,
              "duration": 276,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const getUsers = await axios.get(`${urlBase}/users?per_page=100`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(getUsers.data.length).to.equal(100);",
              "err": {},
              "uuid": "90350cb1-10aa-4555-a193-3cca65956689",
              "parentUUID": "398aca96-0403-43fb-aeb2-238969b1281a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ade1e46-3412-481e-a1a9-c8b9c5b96250",
            "b6351019-4e27-4eeb-b76e-6c2bcb26b0b5",
            "90350cb1-10aa-4555-a193-3cca65956689"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 671,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "1dc4d920-69bb-4f54-b211-481cccf17bf1",
          "title": "First Api Tests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\MyFirstApiConsume.test.js",
          "file": "\\test\\MyFirstApiConsume.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Consume GET Service",
              "fullTitle": "First Api Tests Consume GET Service",
              "timedOut": false,
              "duration": 1426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://httpbin.org/ip');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "d0997fef-3825-4f51-a88c-5aa2a6106fcf",
              "parentUUID": "1dc4d920-69bb-4f54-b211-481cccf17bf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume GET Service with query parameters",
              "fullTitle": "First Api Tests Consume GET Service with query parameters",
              "timedOut": false,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'John',\n  age: '31',\n  city: 'New York'\n};\nconst response = await axios.get('https://httpbin.org/get', { query });\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.config.query).to.eql(query);",
              "err": {},
              "uuid": "f3bbefd3-f64b-4a2e-9ee9-3d1e3f4b9cac",
              "parentUUID": "1dc4d920-69bb-4f54-b211-481cccf17bf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PATCH Service",
              "fullTitle": "First Api Tests Consume PATCH Service",
              "timedOut": false,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.patch('https://httpbin.org/patch');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "331f3f17-2621-46b1-8dfc-562685d84432",
              "parentUUID": "1dc4d920-69bb-4f54-b211-481cccf17bf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PUT Service",
              "fullTitle": "First Api Tests Consume PUT Service",
              "timedOut": false,
              "duration": 456,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put('https://httpbin.org/put');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "e920cc41-4a7c-496c-b446-de7e31f358f2",
              "parentUUID": "1dc4d920-69bb-4f54-b211-481cccf17bf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume DELETE Service",
              "fullTitle": "First Api Tests Consume DELETE Service",
              "timedOut": false,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete('https://httpbin.org/delete');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "65c2e104-691c-4a32-a38c-329662fa8d6a",
              "parentUUID": "1dc4d920-69bb-4f54-b211-481cccf17bf1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume HEAD Service",
              "fullTitle": "First Api Tests Consume HEAD Service",
              "timedOut": false,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.head('https://httpbin.org/');\nexpect(response.status).to.equal(StatusCodes.OK);",
              "err": {},
              "uuid": "7ccabd7d-aedf-4466-a990-873df6dfc90e",
              "parentUUID": "1dc4d920-69bb-4f54-b211-481cccf17bf1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0997fef-3825-4f51-a88c-5aa2a6106fcf",
            "f3bbefd3-f64b-4a2e-9ee9-3d1e3f4b9cac",
            "331f3f17-2621-46b1-8dfc-562685d84432",
            "e920cc41-4a7c-496c-b446-de7e31f358f2",
            "65c2e104-691c-4a32-a38c-329662fa8d6a",
            "7ccabd7d-aedf-4466-a990-873df6dfc90e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "ApiTesting",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "reportFilename": "ApiTesting"
      },
      "version": "6.2.0"
    }
  }
}