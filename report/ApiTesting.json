{
  "stats": {
    "suites": 9,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-13T20:04:32.861Z",
    "end": "2024-06-13T20:04:39.351Z",
    "duration": 6490,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5318bf3b-51ff-4890-8e45-5a88a4fdf2f6",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7290c23f-3ab0-4368-908a-919aacf699f3",
          "title": "Github Api Test",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
          "file": "\\test\\GithubApi.Authentication.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "dd97a1ea-21bc-4eb4-84b0-04742187f84b",
              "title": "Authentication",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
              "file": "\\test\\GithubApi.Authentication.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Via OAuth2 Tokens by Header",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by Header",
                  "timedOut": false,
                  "duration": 375,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/repos/${githubUserName}/${repository}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "22bb8d64-25e7-48d0-9b94-ee381102b823",
                  "parentUUID": "dd97a1ea-21bc-4eb4-84b0-04742187f84b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Via OAuth2 Tokens by parameter",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by parameter",
                  "timedOut": false,
                  "duration": 177,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(\n  `${urlBase}/repos/${githubUserName}/${repository}`,\n  { access_token: process.env.ACCESS_TOKEN }\n);\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "7bda1704-d9b7-4aba-b790-27a059eb3389",
                  "parentUUID": "dd97a1ea-21bc-4eb4-84b0-04742187f84b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22bb8d64-25e7-48d0-9b94-ee381102b823",
                "7bda1704-d9b7-4aba-b790-27a059eb3389"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 552,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "aafbee72-5798-4e91-a63b-450db2e99d2e",
          "title": "Put requests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
          "file": "\\test\\GithubApi.Put.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3e3d5583-45db-4d09-99dc-a2400915c329",
              "title": "Review follow an user",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
              "file": "\\test\\GithubApi.Put.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review follow an user\"",
                  "fullTitle": "Put requests Review follow an user \"before all\" hook in \"Review follow an user\"",
                  "timedOut": false,
                  "duration": 164,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.put(`${urlBase}/user/following/${githubUserName}`, null, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response;",
                  "err": {},
                  "uuid": "e5a66c8f-9c0d-48b9-b9c1-cab54bde153d",
                  "parentUUID": "3e3d5583-45db-4d09-99dc-a2400915c329",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify status ok",
                  "fullTitle": "Put requests Review follow an user Verify status ok",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.status).to.equal(204);\nexpect(dataUser.statusText).to.equal('No Content');",
                  "err": {},
                  "uuid": "60d7e6fa-c448-4d39-9774-c294907f9e15",
                  "parentUUID": "3e3d5583-45db-4d09-99dc-a2400915c329",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60d7e6fa-c448-4d39-9774-c294907f9e15"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "138c6bbb-6a3e-4ac9-a6ab-2b59582f5427",
              "title": "Review user follows an other user",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Put.test.js",
              "file": "\\test\\GithubApi.Put.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Review user follows an other user\"",
                  "fullTitle": "Put requests Review user follows an other user \"before all\" hook in \"Review user follows an other user\"",
                  "timedOut": false,
                  "duration": 131,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await axios.get(`${urlBase}/user/following`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;",
                  "err": {},
                  "uuid": "a3a9c91d-fccc-4ecf-bdf5-31f4b5df93e5",
                  "parentUUID": "138c6bbb-6a3e-4ac9-a6ab-2b59582f5427",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify users that follow the account",
                  "fullTitle": "Put requests Review user follows an other user Verify users that follow the account",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userFollowed = dataUser.find((users) => users.login === githubUserName);\nexpect(userFollowed.login).to.equal('aperdomob');",
                  "err": {},
                  "uuid": "1a998b7b-b316-4458-9a36-fddb466bd49a",
                  "parentUUID": "138c6bbb-6a3e-4ac9-a6ab-2b59582f5427",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a998b7b-b316-4458-9a36-fddb466bd49a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "b1760214-c16d-4cd8-b0e9-d45ca9b87377",
          "title": "Github Api Test",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
          "file": "\\test\\GithubApi.Repositories.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "74115fa0-a314-4242-ac48-ac76e1bdce99",
              "title": "Get data from git hub",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
              "file": "\\test\\GithubApi.Repositories.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get data from git hub\"",
                  "fullTitle": "Github Api Test Get data from git hub \"before all\" hook in \"Get data from git hub\"",
                  "timedOut": false,
                  "duration": 133,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/users/${githubUserName}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;",
                  "err": {},
                  "uuid": "537ee37a-3d92-4de5-b8d7-8ba459aec594",
                  "parentUUID": "74115fa0-a314-4242-ac48-ac76e1bdce99",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify data of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify data of the user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.name).equal(nameOfUser);\nexpect(dataUser.company).equal(company);\nexpect(dataUser.location).equal(location);",
                  "err": {},
                  "uuid": "394fd513-7790-48b2-956c-42a60c664f43",
                  "parentUUID": "74115fa0-a314-4242-ac48-ac76e1bdce99",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify specific repo of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify specific repo of the user",
                  "timedOut": false,
                  "duration": 537,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = response.data;\nconst repository = repositories.find((repo) => repo.name === repoToVerify);\nassert.exists(repository);\nexpect(repository.full_name).to.equal('aperdomob/jasmine-json-report');\nexpect(repository.private).to.equal(false);\nexpect(repository.description).to.equal('A Simple Jasmine JSON Report');",
                  "err": {},
                  "uuid": "f10c6797-c6a1-4f5e-8502-b3b6b77f32fc",
                  "parentUUID": "74115fa0-a314-4242-ac48-ac76e1bdce99",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify repo is downloaded in zip format",
                  "fullTitle": "Github Api Test Get data from git hub Verify repo is downloaded in zip format",
                  "timedOut": false,
                  "duration": 1435,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const noExpectedMd5 = '62b254a4ef680d62d6de3489e462ad43';\nconst response = await get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = response.data;\nconst repository = repositories.find((repo) => repo.name === repoToVerify);\nconst responseFile = await get(`${repository.svn_url}/archive/refs/heads/${repository.default_branch}.zip`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nassert.exists(responseFile);\nexpect(md5(responseFile.data)).to.equal(noExpectedMd5);",
                  "err": {},
                  "uuid": "98df7b74-94c2-41fa-8dc5-99932302f85b",
                  "parentUUID": "74115fa0-a314-4242-ac48-ac76e1bdce99",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "394fd513-7790-48b2-956c-42a60c664f43",
                "f10c6797-c6a1-4f5e-8502-b3b6b77f32fc",
                "98df7b74-94c2-41fa-8dc5-99932302f85b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1973,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "373c7388-d20b-410b-97d8-a54753e89dff",
              "title": "Get README file to verify",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
              "file": "\\test\\GithubApi.Repositories.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get README file to verify\"",
                  "fullTitle": "Github Api Test Get README file to verify \"before all\" hook in \"Get README file to verify\"",
                  "timedOut": false,
                  "duration": 802,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/users/${githubUserName}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst responseRepos = await get(response.data.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = responseRepos.data;\nconst repositoryData = repositories.find((repo) => repo.name === repoToVerify);\nconst responseFile = await get(`${repositoryData.url}/contents`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nresponseFileData = responseFile.data;",
                  "err": {},
                  "uuid": "7ec7182b-83a8-497a-99ee-bf29a2b1c132",
                  "parentUUID": "373c7388-d20b-410b-97d8-a54753e89dff",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify README.md data",
                  "fullTitle": "Github Api Test Get README file to verify Verify README.md data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const readmeData = responseFileData.find((files) => files.name === readmeName);\nexpect(readmeData.name).to.equal(readmeName);\nexpect(readmeData.path).to.equal(readmePath);\nexpect(readmeData.sha).to.equal(readmeSha);",
                  "err": {},
                  "uuid": "e49b702b-1e05-4a56-99e3-e04caa55bd67",
                  "parentUUID": "373c7388-d20b-410b-97d8-a54753e89dff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Download README.md file",
                  "fullTitle": "Github Api Test Get README file to verify Download README.md file",
                  "timedOut": false,
                  "duration": 447,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const readmeMD5 = '497eb689648cbbda472b16baaee45731';\nconst repositoryData = responseFileData.find((repo) => repo.name === readmeName);\nconst responseReadme = await get(repositoryData.download_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nassert.exists(responseReadme);\nexpect(md5(responseReadme.data)).to.equal(readmeMD5);",
                  "err": {},
                  "uuid": "99a03a42-72f0-4737-b215-8f59c2aed2ba",
                  "parentUUID": "373c7388-d20b-410b-97d8-a54753e89dff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e49b702b-1e05-4a56-99e3-e04caa55bd67",
                "99a03a42-72f0-4737-b215-8f59c2aed2ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 447,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "1fc0e7ff-a9b2-454f-ab85-427520fc3c32",
          "title": "First Api Tests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\MyFirstApiConsume.test.js",
          "file": "\\test\\MyFirstApiConsume.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Consume GET Service",
              "fullTitle": "First Api Tests Consume GET Service",
              "timedOut": false,
              "duration": 327,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://httpbin.org/ip');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "64b5431c-f124-4a61-8198-dd4e4c779964",
              "parentUUID": "1fc0e7ff-a9b2-454f-ab85-427520fc3c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume GET Service with query parameters",
              "fullTitle": "First Api Tests Consume GET Service with query parameters",
              "timedOut": false,
              "duration": 1561,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'John',\n  age: '31',\n  city: 'New York'\n};\nconst response = await axios.get('https://httpbin.org/get', { query });\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.config.query).to.eql(query);",
              "err": {},
              "uuid": "f69e2c8d-5658-4684-8ca8-68b3aa714f20",
              "parentUUID": "1fc0e7ff-a9b2-454f-ab85-427520fc3c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PATCH Service",
              "fullTitle": "First Api Tests Consume PATCH Service",
              "timedOut": false,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.patch('https://httpbin.org/patch');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "1fb5708f-0df8-42ab-8b0e-a6a19ee4d7ed",
              "parentUUID": "1fc0e7ff-a9b2-454f-ab85-427520fc3c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PUT Service",
              "fullTitle": "First Api Tests Consume PUT Service",
              "timedOut": false,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put('https://httpbin.org/put');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "7ac45da2-3426-43f1-b73c-e22ec6c0031a",
              "parentUUID": "1fc0e7ff-a9b2-454f-ab85-427520fc3c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume DELETE Service",
              "fullTitle": "First Api Tests Consume DELETE Service",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete('https://httpbin.org/delete');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "5ba2df65-d0b4-4295-86c5-e86701e14403",
              "parentUUID": "1fc0e7ff-a9b2-454f-ab85-427520fc3c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume HEAD Service",
              "fullTitle": "First Api Tests Consume HEAD Service",
              "timedOut": false,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.head('https://httpbin.org/');\nexpect(response.status).to.equal(StatusCodes.OK);",
              "err": {},
              "uuid": "7ab8e86f-ae2a-4591-98fd-e8b65a722455",
              "parentUUID": "1fc0e7ff-a9b2-454f-ab85-427520fc3c32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64b5431c-f124-4a61-8198-dd4e4c779964",
            "f69e2c8d-5658-4684-8ca8-68b3aa714f20",
            "1fb5708f-0df8-42ab-8b0e-a6a19ee4d7ed",
            "7ac45da2-3426-43f1-b73c-e22ec6c0031a",
            "5ba2df65-d0b4-4295-86c5-e86701e14403",
            "7ab8e86f-ae2a-4591-98fd-e8b65a722455"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2265,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "ApiTesting",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "reportFilename": "ApiTesting"
      },
      "version": "6.2.0"
    }
  }
}