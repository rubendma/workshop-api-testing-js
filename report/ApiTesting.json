{
  "stats": {
    "suites": 6,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2024-06-05T19:39:45.680Z",
    "end": "2024-06-05T19:39:50.871Z",
    "duration": 5191,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "341eb046-b8ec-438a-a3c1-4135e6426ea3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d982f62-e10d-414a-b7f7-7929eef55d04",
          "title": "Github Api Test",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
          "file": "\\test\\GithubApi.Authentication.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fe2b1381-f0d7-4ca4-afe0-ccc4a2095828",
              "title": "Authentication",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Authentication.test.js",
              "file": "\\test\\GithubApi.Authentication.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Via OAuth2 Tokens by Header",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by Header",
                  "timedOut": false,
                  "duration": 455,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/repos/${githubUserName}/${repository}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "32175f26-c436-4d31-b3af-ce9eb196039f",
                  "parentUUID": "fe2b1381-f0d7-4ca4-afe0-ccc4a2095828",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Via OAuth2 Tokens by parameter",
                  "fullTitle": "Github Api Test Authentication Via OAuth2 Tokens by parameter",
                  "timedOut": false,
                  "duration": 132,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(\n  `${urlBase}/repos/${githubUserName}/${repository}`,\n  { access_token: process.env.ACCESS_TOKEN }\n);\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data.description).equal('This is a Workshop about Api Testing in JavaScript');",
                  "err": {},
                  "uuid": "566c0d87-24c2-489f-9e97-a446b05ba64f",
                  "parentUUID": "fe2b1381-f0d7-4ca4-afe0-ccc4a2095828",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "32175f26-c436-4d31-b3af-ce9eb196039f",
                "566c0d87-24c2-489f-9e97-a446b05ba64f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 587,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "9e95070d-7083-4623-b1af-ee6ba9233812",
          "title": "Github Api Test",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
          "file": "\\test\\GithubApi.Repositories.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2d8bcd22-8f63-416e-82e6-4ae86c01d5be",
              "title": "Get data from git hub",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
              "file": "\\test\\GithubApi.Repositories.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get data from git hub\"",
                  "fullTitle": "Github Api Test Get data from git hub \"before all\" hook in \"Get data from git hub\"",
                  "timedOut": false,
                  "duration": 189,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/users/${githubUserName}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\ndataUser = response.data;",
                  "err": {},
                  "uuid": "90e450fe-bdeb-4882-86f2-90fe7a9894a8",
                  "parentUUID": "2d8bcd22-8f63-416e-82e6-4ae86c01d5be",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify data of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify data of the user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(dataUser.name).equal(nameOfUser);\nexpect(dataUser.company).equal(company);\nexpect(dataUser.location).equal(location);",
                  "err": {},
                  "uuid": "91b3c3c9-db5f-4c18-85e5-42d02b8aa428",
                  "parentUUID": "2d8bcd22-8f63-416e-82e6-4ae86c01d5be",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify specific repo of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify specific repo of the user",
                  "timedOut": false,
                  "duration": 527,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = response.data;\nconst repository = repositories.find((repo) => repo.name === repoToVerify);\nassert.exists(repository);\nexpect(repository.full_name).to.equal('aperdomob/jasmine-json-report');\nexpect(repository.private).to.equal(false);\nexpect(repository.description).to.equal('A Simple Jasmine JSON Report');",
                  "err": {},
                  "uuid": "23c14333-d7c6-4449-b381-ed34ff1ed406",
                  "parentUUID": "2d8bcd22-8f63-416e-82e6-4ae86c01d5be",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Verify specific repo of the user",
                  "fullTitle": "Github Api Test Get data from git hub Verify specific repo of the user",
                  "timedOut": false,
                  "duration": 1492,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const noExpectedMd5 = '62b254a4ef680d62d6de3489e462ad43';\nconst response = await get(dataUser.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = response.data;\nconst repository = repositories.find((repo) => repo.name === repoToVerify);\nconst responseFile = await get(`${repository.svn_url}/archive/refs/heads/${repository.default_branch}.zip`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nassert.exists(responseFile);\nexpect(md5(responseFile.data)).to.equal(noExpectedMd5);",
                  "err": {},
                  "uuid": "b100775f-a3af-46f6-9eec-8badb6e5c4c4",
                  "parentUUID": "2d8bcd22-8f63-416e-82e6-4ae86c01d5be",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91b3c3c9-db5f-4c18-85e5-42d02b8aa428",
                "23c14333-d7c6-4449-b381-ed34ff1ed406",
                "b100775f-a3af-46f6-9eec-8badb6e5c4c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2019,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "085959e8-ece5-4492-a7df-fbc8e3491680",
              "title": "Get README file to verify",
              "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\GithubApi.Repositories.test.js",
              "file": "\\test\\GithubApi.Repositories.test.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get README file to verify\"",
                  "fullTitle": "Github Api Test Get README file to verify \"before all\" hook in \"Get README file to verify\"",
                  "timedOut": false,
                  "duration": 837,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await get(`${urlBase}/users/${githubUserName}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst responseRepos = await get(response.data.repos_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nconst repositories = responseRepos.data;\nconst repositoryData = repositories.find((repo) => repo.name === repoToVerify);\nconst responseFile = await get(`${repositoryData.url}/contents`, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nresponseFileData = responseFile.data;",
                  "err": {},
                  "uuid": "0edb990a-ff8f-4479-b835-7e987681a81a",
                  "parentUUID": "085959e8-ece5-4492-a7df-fbc8e3491680",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Verify README.md file in other describe",
                  "fullTitle": "Github Api Test Get README file to verify Verify README.md file in other describe",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const readmeData = responseFileData.find((files) => files.name === readmeName);\nexpect(readmeData.name).to.equal(readmeName);\nexpect(readmeData.path).to.equal(readmePath);\nexpect(readmeData.sha).to.equal(readmeSha);",
                  "err": {},
                  "uuid": "ff90553d-4543-42e9-9f09-25488de8e2b5",
                  "parentUUID": "085959e8-ece5-4492-a7df-fbc8e3491680",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Download README.md file",
                  "fullTitle": "Github Api Test Get README file to verify Download README.md file",
                  "timedOut": false,
                  "duration": 358,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const readmeMD5 = '497eb689648cbbda472b16baaee45731';\nconst repositoryData = responseFileData.find((repo) => repo.name === readmeName);\nconst responseReadme = await get(repositoryData.download_url, {\n  headers: {\n    Authorization: `Bearer ${process.env.ACCESS_TOKEN}`\n  }\n});\nassert.exists(responseReadme);\nexpect(md5(responseReadme.data)).to.equal(readmeMD5);",
                  "err": {},
                  "uuid": "71bc3fe2-bcfd-49f7-8246-02a4726b44fd",
                  "parentUUID": "085959e8-ece5-4492-a7df-fbc8e3491680",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff90553d-4543-42e9-9f09-25488de8e2b5",
                "71bc3fe2-bcfd-49f7-8246-02a4726b44fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 358,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "4f8ef354-f15d-4039-b508-ff9fa1a01aa8",
          "title": "First Api Tests",
          "fullFile": "C:\\TRAININGS\\WORKSHOP AXIOS\\workshop-api-testing-js\\test\\MyFirstApiConsume.test.js",
          "file": "\\test\\MyFirstApiConsume.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Consume GET Service",
              "fullTitle": "First Api Tests Consume GET Service",
              "timedOut": false,
              "duration": 667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get('https://httpbin.org/ip');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "dc039be1-7a5d-46a6-a81a-f5362e8ffa35",
              "parentUUID": "4f8ef354-f15d-4039-b508-ff9fa1a01aa8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume GET Service with query parameters",
              "fullTitle": "First Api Tests Consume GET Service with query parameters",
              "timedOut": false,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const query = {\n  name: 'John',\n  age: '31',\n  city: 'New York'\n};\nconst response = await axios.get('https://httpbin.org/get', { query });\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.config.query).to.eql(query);",
              "err": {},
              "uuid": "bcf0fdff-ef4e-4061-b8c6-708951940202",
              "parentUUID": "4f8ef354-f15d-4039-b508-ff9fa1a01aa8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PATCH Service",
              "fullTitle": "First Api Tests Consume PATCH Service",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.patch('https://httpbin.org/patch');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "f5b088bb-5b3c-4552-bd8c-266d03726078",
              "parentUUID": "4f8ef354-f15d-4039-b508-ff9fa1a01aa8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume PUT Service",
              "fullTitle": "First Api Tests Consume PUT Service",
              "timedOut": false,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put('https://httpbin.org/put');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "d08e2897-198e-4378-a52f-65063e905e7c",
              "parentUUID": "4f8ef354-f15d-4039-b508-ff9fa1a01aa8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume DELETE Service",
              "fullTitle": "First Api Tests Consume DELETE Service",
              "timedOut": false,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete('https://httpbin.org/delete');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.data).to.have.property('origin');",
              "err": {},
              "uuid": "9f4e2f98-bdf0-48c9-8ba2-fb185f86f5cf",
              "parentUUID": "4f8ef354-f15d-4039-b508-ff9fa1a01aa8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Consume HEAD Service",
              "fullTitle": "First Api Tests Consume HEAD Service",
              "timedOut": false,
              "duration": 192,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.head('https://httpbin.org/');\nexpect(response.status).to.equal(StatusCodes.OK);",
              "err": {},
              "uuid": "0e4b0f8c-a3b2-4935-9779-d48cbcd82670",
              "parentUUID": "4f8ef354-f15d-4039-b508-ff9fa1a01aa8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc039be1-7a5d-46a6-a81a-f5362e8ffa35",
            "bcf0fdff-ef4e-4061-b8c6-708951940202",
            "f5b088bb-5b3c-4552-bd8c-266d03726078",
            "d08e2897-198e-4378-a52f-65063e905e7c",
            "9f4e2f98-bdf0-48c9-8ba2-fb185f86f5cf",
            "0e4b0f8c-a3b2-4935-9779-d48cbcd82670"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1183,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "ApiTesting",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "reportFilename": "ApiTesting"
      },
      "version": "6.2.0"
    }
  }
}